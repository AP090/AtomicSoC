--lpm_decode DEVICE_FAMILY="Cyclone V" LPM_DECODES=16 LPM_WIDTH=4 data eq
--VERSION_BEGIN 14.0 cbx_cycloneii 2014:06:17:18:06:03:SJ cbx_lpm_add_sub 2014:06:17:18:06:03:SJ cbx_lpm_compare 2014:06:17:18:06:03:SJ cbx_lpm_decode 2014:06:17:18:06:03:SJ cbx_mgl 2014:06:17:18:10:38:SJ cbx_stratix 2014:06:17:18:06:03:SJ cbx_stratixii 2014:06:17:18:06:03:SJ  VERSION_END


-- Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_de6
( 
	data[3..0]	:	input;
	eq[15..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[15..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode3320w[3..0]	: WIRE;
	w_anode3337w[3..0]	: WIRE;
	w_anode3347w[3..0]	: WIRE;
	w_anode3357w[3..0]	: WIRE;
	w_anode3367w[3..0]	: WIRE;
	w_anode3377w[3..0]	: WIRE;
	w_anode3387w[3..0]	: WIRE;
	w_anode3397w[3..0]	: WIRE;
	w_anode3407w[3..0]	: WIRE;
	w_anode3418w[3..0]	: WIRE;
	w_anode3428w[3..0]	: WIRE;
	w_anode3438w[3..0]	: WIRE;
	w_anode3448w[3..0]	: WIRE;
	w_anode3458w[3..0]	: WIRE;
	w_anode3468w[3..0]	: WIRE;
	w_anode3478w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[7..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode3397w[3..3], w_anode3387w[3..3], w_anode3377w[3..3], w_anode3367w[3..3], w_anode3357w[3..3], w_anode3347w[3..3], w_anode3337w[3..3], w_anode3320w[3..3]);
	eq_wire2w[] = ( w_anode3478w[3..3], w_anode3468w[3..3], w_anode3458w[3..3], w_anode3448w[3..3], w_anode3438w[3..3], w_anode3428w[3..3], w_anode3418w[3..3], w_anode3407w[3..3]);
	w_anode3320w[] = ( (w_anode3320w[2..2] & (! data_wire[2..2])), (w_anode3320w[1..1] & (! data_wire[1..1])), (w_anode3320w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode3337w[] = ( (w_anode3337w[2..2] & (! data_wire[2..2])), (w_anode3337w[1..1] & (! data_wire[1..1])), (w_anode3337w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode3347w[] = ( (w_anode3347w[2..2] & (! data_wire[2..2])), (w_anode3347w[1..1] & data_wire[1..1]), (w_anode3347w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode3357w[] = ( (w_anode3357w[2..2] & (! data_wire[2..2])), (w_anode3357w[1..1] & data_wire[1..1]), (w_anode3357w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode3367w[] = ( (w_anode3367w[2..2] & data_wire[2..2]), (w_anode3367w[1..1] & (! data_wire[1..1])), (w_anode3367w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode3377w[] = ( (w_anode3377w[2..2] & data_wire[2..2]), (w_anode3377w[1..1] & (! data_wire[1..1])), (w_anode3377w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode3387w[] = ( (w_anode3387w[2..2] & data_wire[2..2]), (w_anode3387w[1..1] & data_wire[1..1]), (w_anode3387w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode3397w[] = ( (w_anode3397w[2..2] & data_wire[2..2]), (w_anode3397w[1..1] & data_wire[1..1]), (w_anode3397w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode3407w[] = ( (w_anode3407w[2..2] & (! data_wire[2..2])), (w_anode3407w[1..1] & (! data_wire[1..1])), (w_anode3407w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode3418w[] = ( (w_anode3418w[2..2] & (! data_wire[2..2])), (w_anode3418w[1..1] & (! data_wire[1..1])), (w_anode3418w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode3428w[] = ( (w_anode3428w[2..2] & (! data_wire[2..2])), (w_anode3428w[1..1] & data_wire[1..1]), (w_anode3428w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode3438w[] = ( (w_anode3438w[2..2] & (! data_wire[2..2])), (w_anode3438w[1..1] & data_wire[1..1]), (w_anode3438w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode3448w[] = ( (w_anode3448w[2..2] & data_wire[2..2]), (w_anode3448w[1..1] & (! data_wire[1..1])), (w_anode3448w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode3458w[] = ( (w_anode3458w[2..2] & data_wire[2..2]), (w_anode3458w[1..1] & (! data_wire[1..1])), (w_anode3458w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode3468w[] = ( (w_anode3468w[2..2] & data_wire[2..2]), (w_anode3468w[1..1] & data_wire[1..1]), (w_anode3468w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode3478w[] = ( (w_anode3478w[2..2] & data_wire[2..2]), (w_anode3478w[1..1] & data_wire[1..1]), (w_anode3478w[0..0] & data_wire[0..0]), enable_wire2);
END;
--VALID FILE
