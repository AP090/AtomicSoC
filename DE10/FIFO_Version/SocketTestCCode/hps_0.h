#ifndef _ALTERA_HPS_0_H_
#define _ALTERA_HPS_0_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file '/cygdrive/c/Users/Dypole/Documents/FIFO_Version/soc_system.sopcinfo'.
 */

/*
 * This file contains macros for module 'hps_0' and devices
 * connected to the following masters:
 *   h2f_axi_master
 *   h2f_lw_axi_master
 * 
 * Do not include this header file and another header file created for a
 * different module or master group at the same time.
 * Doing so may result in duplicate macro names.
 * Instead, use the system header file which has macros with unique names.
 */

/*
 * Macros for device 'onchip_memory2_0', class 'altera_avalon_onchip_memory2'
 * The macros are prefixed with 'ONCHIP_MEMORY2_0_'.
 * The prefix is the slave descriptor.
 */
#define ONCHIP_MEMORY2_0_COMPONENT_TYPE altera_avalon_onchip_memory2
#define ONCHIP_MEMORY2_0_COMPONENT_NAME onchip_memory2_0
#define ONCHIP_MEMORY2_0_BASE 0x0
#define ONCHIP_MEMORY2_0_SPAN 65536
#define ONCHIP_MEMORY2_0_END 0xffff
#define ONCHIP_MEMORY2_0_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define ONCHIP_MEMORY2_0_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define ONCHIP_MEMORY2_0_CONTENTS_INFO ""
#define ONCHIP_MEMORY2_0_DUAL_PORT 0
#define ONCHIP_MEMORY2_0_GUI_RAM_BLOCK_TYPE AUTO
#define ONCHIP_MEMORY2_0_INIT_CONTENTS_FILE soc_system_onchip_memory2_0
#define ONCHIP_MEMORY2_0_INIT_MEM_CONTENT 1
#define ONCHIP_MEMORY2_0_INSTANCE_ID NONE
#define ONCHIP_MEMORY2_0_NON_DEFAULT_INIT_FILE_ENABLED 0
#define ONCHIP_MEMORY2_0_RAM_BLOCK_TYPE AUTO
#define ONCHIP_MEMORY2_0_READ_DURING_WRITE_MODE DONT_CARE
#define ONCHIP_MEMORY2_0_SINGLE_CLOCK_OP 0
#define ONCHIP_MEMORY2_0_SIZE_MULTIPLE 1
#define ONCHIP_MEMORY2_0_SIZE_VALUE 65536
#define ONCHIP_MEMORY2_0_WRITABLE 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_DAT_SYM 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_GENERATE_HEX 1
#define ONCHIP_MEMORY2_0_MEMORY_INFO_HAS_BYTE_LANE 0
#define ONCHIP_MEMORY2_0_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define ONCHIP_MEMORY2_0_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory2_0

/*
 * Macros for device 'led_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'LED_PIO_'.
 * The prefix is the slave descriptor.
 */
#define LED_PIO_COMPONENT_TYPE altera_avalon_pio
#define LED_PIO_COMPONENT_NAME led_pio
#define LED_PIO_BASE 0x0
#define LED_PIO_SPAN 32
#define LED_PIO_END 0x1f
#define LED_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define LED_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define LED_PIO_CAPTURE 0
#define LED_PIO_DATA_WIDTH 8
#define LED_PIO_DO_TEST_BENCH_WIRING 0
#define LED_PIO_DRIVEN_SIM_VALUE 0
#define LED_PIO_EDGE_TYPE NONE
#define LED_PIO_FREQ 50000000
#define LED_PIO_HAS_IN 0
#define LED_PIO_HAS_OUT 1
#define LED_PIO_HAS_TRI 0
#define LED_PIO_IRQ_TYPE NONE
#define LED_PIO_RESET_VALUE 255

/*
 * Macros for device 'busy_in', class 'altera_avalon_pio'
 * The macros are prefixed with 'BUSY_IN_'.
 * The prefix is the slave descriptor.
 */
#define BUSY_IN_COMPONENT_TYPE altera_avalon_pio
#define BUSY_IN_COMPONENT_NAME busy_in
#define BUSY_IN_BASE 0x10
#define BUSY_IN_SPAN 32
#define BUSY_IN_END 0x2f
#define BUSY_IN_BIT_CLEARING_EDGE_REGISTER 0
#define BUSY_IN_BIT_MODIFYING_OUTPUT_REGISTER 0
#define BUSY_IN_CAPTURE 0
#define BUSY_IN_DATA_WIDTH 1
#define BUSY_IN_DO_TEST_BENCH_WIRING 0
#define BUSY_IN_DRIVEN_SIM_VALUE 0
#define BUSY_IN_EDGE_TYPE NONE
#define BUSY_IN_FREQ 50000000
#define BUSY_IN_HAS_IN 1
#define BUSY_IN_HAS_OUT 0
#define BUSY_IN_HAS_TRI 0
#define BUSY_IN_IRQ_TYPE NONE
#define BUSY_IN_RESET_VALUE 0

/*
 * Macros for device 'fifo_wrfull', class 'altera_avalon_pio'
 * The macros are prefixed with 'FIFO_WRFULL_'.
 * The prefix is the slave descriptor.
 */
#define FIFO_WRFULL_COMPONENT_TYPE altera_avalon_pio
#define FIFO_WRFULL_COMPONENT_NAME fifo_wrfull
#define FIFO_WRFULL_BASE 0x20
#define FIFO_WRFULL_SPAN 32
#define FIFO_WRFULL_END 0x3f
#define FIFO_WRFULL_BIT_CLEARING_EDGE_REGISTER 0
#define FIFO_WRFULL_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FIFO_WRFULL_CAPTURE 0
#define FIFO_WRFULL_DATA_WIDTH 1
#define FIFO_WRFULL_DO_TEST_BENCH_WIRING 0
#define FIFO_WRFULL_DRIVEN_SIM_VALUE 0
#define FIFO_WRFULL_EDGE_TYPE NONE
#define FIFO_WRFULL_FREQ 50000000
#define FIFO_WRFULL_HAS_IN 1
#define FIFO_WRFULL_HAS_OUT 0
#define FIFO_WRFULL_HAS_TRI 0
#define FIFO_WRFULL_IRQ_TYPE NONE
#define FIFO_WRFULL_RESET_VALUE 0

/*
 * Macros for device 'system_reset', class 'altera_avalon_pio'
 * The macros are prefixed with 'SYSTEM_RESET_'.
 * The prefix is the slave descriptor.
 */
#define SYSTEM_RESET_COMPONENT_TYPE altera_avalon_pio
#define SYSTEM_RESET_COMPONENT_NAME system_reset
#define SYSTEM_RESET_BASE 0x30
#define SYSTEM_RESET_SPAN 32
#define SYSTEM_RESET_END 0x4f
#define SYSTEM_RESET_BIT_CLEARING_EDGE_REGISTER 0
#define SYSTEM_RESET_BIT_MODIFYING_OUTPUT_REGISTER 0
#define SYSTEM_RESET_CAPTURE 0
#define SYSTEM_RESET_DATA_WIDTH 1
#define SYSTEM_RESET_DO_TEST_BENCH_WIRING 0
#define SYSTEM_RESET_DRIVEN_SIM_VALUE 0
#define SYSTEM_RESET_EDGE_TYPE NONE
#define SYSTEM_RESET_FREQ 50000000
#define SYSTEM_RESET_HAS_IN 0
#define SYSTEM_RESET_HAS_OUT 1
#define SYSTEM_RESET_HAS_TRI 0
#define SYSTEM_RESET_IRQ_TYPE NONE
#define SYSTEM_RESET_RESET_VALUE 0

/*
 * Macros for device 'new_word_ready', class 'altera_avalon_pio'
 * The macros are prefixed with 'NEW_WORD_READY_'.
 * The prefix is the slave descriptor.
 */
#define NEW_WORD_READY_COMPONENT_TYPE altera_avalon_pio
#define NEW_WORD_READY_COMPONENT_NAME new_word_ready
#define NEW_WORD_READY_BASE 0x40
#define NEW_WORD_READY_SPAN 32
#define NEW_WORD_READY_END 0x5f
#define NEW_WORD_READY_BIT_CLEARING_EDGE_REGISTER 0
#define NEW_WORD_READY_BIT_MODIFYING_OUTPUT_REGISTER 0
#define NEW_WORD_READY_CAPTURE 0
#define NEW_WORD_READY_DATA_WIDTH 1
#define NEW_WORD_READY_DO_TEST_BENCH_WIRING 0
#define NEW_WORD_READY_DRIVEN_SIM_VALUE 0
#define NEW_WORD_READY_EDGE_TYPE NONE
#define NEW_WORD_READY_FREQ 50000000
#define NEW_WORD_READY_HAS_IN 0
#define NEW_WORD_READY_HAS_OUT 1
#define NEW_WORD_READY_HAS_TRI 0
#define NEW_WORD_READY_IRQ_TYPE NONE
#define NEW_WORD_READY_RESET_VALUE 0

/*
 * Macros for device 'fake_OK', class 'altera_avalon_pio'
 * The macros are prefixed with 'FAKE_OK_'.
 * The prefix is the slave descriptor.
 */
#define FAKE_OK_COMPONENT_TYPE altera_avalon_pio
#define FAKE_OK_COMPONENT_NAME fake_OK
#define FAKE_OK_BASE 0x50
#define FAKE_OK_SPAN 32
#define FAKE_OK_END 0x6f
#define FAKE_OK_BIT_CLEARING_EDGE_REGISTER 0
#define FAKE_OK_BIT_MODIFYING_OUTPUT_REGISTER 0
#define FAKE_OK_CAPTURE 0
#define FAKE_OK_DATA_WIDTH 1
#define FAKE_OK_DO_TEST_BENCH_WIRING 0
#define FAKE_OK_DRIVEN_SIM_VALUE 0
#define FAKE_OK_EDGE_TYPE NONE
#define FAKE_OK_FREQ 50000000
#define FAKE_OK_HAS_IN 0
#define FAKE_OK_HAS_OUT 1
#define FAKE_OK_HAS_TRI 0
#define FAKE_OK_IRQ_TYPE NONE
#define FAKE_OK_RESET_VALUE 0

/*
 * Macros for device 'opal_kelly_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'OPAL_KELLY_PIO_'.
 * The prefix is the slave descriptor.
 */
#define OPAL_KELLY_PIO_COMPONENT_TYPE altera_avalon_pio
#define OPAL_KELLY_PIO_COMPONENT_NAME opal_kelly_pio
#define OPAL_KELLY_PIO_BASE 0x60
#define OPAL_KELLY_PIO_SPAN 32
#define OPAL_KELLY_PIO_END 0x7f
#define OPAL_KELLY_PIO_BIT_CLEARING_EDGE_REGISTER 1
#define OPAL_KELLY_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define OPAL_KELLY_PIO_CAPTURE 0
#define OPAL_KELLY_PIO_DATA_WIDTH 1
#define OPAL_KELLY_PIO_DO_TEST_BENCH_WIRING 0
#define OPAL_KELLY_PIO_DRIVEN_SIM_VALUE 0
#define OPAL_KELLY_PIO_EDGE_TYPE NONE
#define OPAL_KELLY_PIO_FREQ 50000000
#define OPAL_KELLY_PIO_HAS_IN 0
#define OPAL_KELLY_PIO_HAS_OUT 1
#define OPAL_KELLY_PIO_HAS_TRI 0
#define OPAL_KELLY_PIO_IRQ_TYPE NONE
#define OPAL_KELLY_PIO_RESET_VALUE 0

/*
 * Macros for device 'dac_pio', class 'altera_avalon_pio'
 * The macros are prefixed with 'DAC_PIO_'.
 * The prefix is the slave descriptor.
 */
#define DAC_PIO_COMPONENT_TYPE altera_avalon_pio
#define DAC_PIO_COMPONENT_NAME dac_pio
#define DAC_PIO_BASE 0x70
#define DAC_PIO_SPAN 32
#define DAC_PIO_END 0x8f
#define DAC_PIO_BIT_CLEARING_EDGE_REGISTER 0
#define DAC_PIO_BIT_MODIFYING_OUTPUT_REGISTER 0
#define DAC_PIO_CAPTURE 0
#define DAC_PIO_DATA_WIDTH 20
#define DAC_PIO_DO_TEST_BENCH_WIRING 0
#define DAC_PIO_DRIVEN_SIM_VALUE 0
#define DAC_PIO_EDGE_TYPE NONE
#define DAC_PIO_FREQ 50000000
#define DAC_PIO_HAS_IN 0
#define DAC_PIO_HAS_OUT 1
#define DAC_PIO_HAS_TRI 0
#define DAC_PIO_IRQ_TYPE NONE
#define DAC_PIO_RESET_VALUE 0

/*
 * Macros for device 'sysid_qsys', class 'altera_avalon_sysid_qsys'
 * The macros are prefixed with 'SYSID_QSYS_'.
 * The prefix is the slave descriptor.
 */
#define SYSID_QSYS_COMPONENT_TYPE altera_avalon_sysid_qsys
#define SYSID_QSYS_COMPONENT_NAME sysid_qsys
#define SYSID_QSYS_BASE 0x10000
#define SYSID_QSYS_SPAN 8
#define SYSID_QSYS_END 0x10007
#define SYSID_QSYS_ID 2899645186
#define SYSID_QSYS_TIMESTAMP 1517890457

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * The macros are prefixed with 'JTAG_UART_'.
 * The prefix is the slave descriptor.
 */
#define JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define JTAG_UART_COMPONENT_NAME jtag_uart
#define JTAG_UART_BASE 0x20000
#define JTAG_UART_SPAN 16
#define JTAG_UART_END 0x2000f
#define JTAG_UART_IRQ 2
#define JTAG_UART_READ_DEPTH 64
#define JTAG_UART_READ_THRESHOLD 8
#define JTAG_UART_WRITE_DEPTH 64
#define JTAG_UART_WRITE_THRESHOLD 8


#endif /* _ALTERA_HPS_0_H_ */
